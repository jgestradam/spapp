{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grego\\\\OneDrive\\\\Documents\\\\udemy-REACT-QUERY\\\\base-lazy-days\\\\client\\\\src\\\\components\\\\user\\\\UserProfile.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable max-lines-per-function */\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Input, Stack } from '@chakra-ui/react';\nimport { Field, Form, Formik } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport { usePatchUser } from './hooks/usePatchUser';\nimport { useUser } from './hooks/useUser';\nimport { UserAppointments } from './UserAppointments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserProfile() {\n  _s();\n\n  var _user$name, _user$address, _user$phone;\n\n  const {\n    user\n  } = useUser();\n  const patchUser = usePatchUser();\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const formElements = ['name', 'address', 'phone'];\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"84vh\",\n    align: \"center\",\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      mx: \"auto\",\n      w: \"xl\",\n      py: 12,\n      px: 6,\n      children: [/*#__PURE__*/_jsxDEV(UserAppointments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Your information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        rounded: \"lg\",\n        bg: \"white\",\n        boxShadow: \"lg\",\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: {\n            name: (_user$name = user === null || user === void 0 ? void 0 : user.name) !== null && _user$name !== void 0 ? _user$name : '',\n            address: (_user$address = user === null || user === void 0 ? void 0 : user.address) !== null && _user$address !== void 0 ? _user$address : '',\n            phone: (_user$phone = user === null || user === void 0 ? void 0 : user.phone) !== null && _user$phone !== void 0 ? _user$phone : ''\n          },\n          onSubmit: values => {\n            patchUser({ ...user,\n              ...values\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [formElements.map(element => /*#__PURE__*/_jsxDEV(FormControl, {\n              id: element,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: element\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: element,\n                as: Input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, element, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 6,\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"HMg2qwJzAey4M8+3+xYHf6VRq4w=\", false, function () {\n  return [useUser, usePatchUser];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/user/UserProfile.tsx"],"names":["Box","Button","Flex","FormControl","FormLabel","Heading","Input","Stack","Field","Form","Formik","Redirect","usePatchUser","useUser","UserAppointments","UserProfile","user","patchUser","formElements","name","address","phone","values","map","element"],"mappings":"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","sourcesContent":["/* eslint-disable max-lines-per-function */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { ReactElement } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { usePatchUser } from './hooks/usePatchUser';\r\nimport { useUser } from './hooks/useUser';\r\nimport { UserAppointments } from './UserAppointments';\r\n\r\nexport function UserProfile(): ReactElement {\r\n  const { user } = useUser();\r\n  const patchUser = usePatchUser();\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  const formElements = ['name', 'address', 'phone'];\r\n  interface FormValues {\r\n    name: string;\r\n    address: string;\r\n    phone: string;\r\n  }\r\n\r\n  return (\r\n    <Flex minH=\"84vh\" align=\"center\" justify=\"center\">\r\n      <Stack spacing={8} mx=\"auto\" w=\"xl\" py={12} px={6}>\r\n        <UserAppointments />\r\n        <Stack align=\"center\">\r\n          <Heading>Your information</Heading>\r\n        </Stack>\r\n        <Box rounded=\"lg\" bg=\"white\" boxShadow=\"lg\" p={8}>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n              name: user?.name ?? '',\r\n              address: user?.address ?? '',\r\n              phone: user?.phone ?? '',\r\n            }}\r\n            onSubmit={(values: FormValues) => {\r\n              patchUser({ ...user, ...values });\r\n            }}\r\n          >\r\n            <Form>\r\n              {formElements.map((element) => (\r\n                <FormControl key={element} id={element}>\r\n                  <FormLabel>{element}</FormLabel>\r\n                  <Field name={element} as={Input} />\r\n                </FormControl>\r\n              ))}\r\n              <Button mt={6} type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}