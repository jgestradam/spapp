{"ast":null,"code":"import { axiosInstance } from '../../../axiosInstance';\n\n// for when we need a query function for useQuery\nasync function getTreatments() {\n  const {\n    data\n  } = await axiosInstance.get('/treatments');\n  return data;\n}\n\nexport function useTreatments() {\n  // TODO: get data from server via useQuery\n  return [];\n}","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/treatments/hooks/useTreatments.ts"],"names":["axiosInstance","getTreatments","data","get","useTreatments"],"mappings":"AAEA,SAASA,aAAT,QAA8B,wBAA9B;;AAIA;AACA,eAAeC,aAAf,GAAqD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,aAAa,CAACG,GAAd,CAAkB,aAAlB,CAAvB;AACA,SAAOD,IAAP;AACC;;AAED,OAAO,SAASE,aAAT,GAAsC;AAC3C;AACA,SAAO,EAAP;AACD","sourcesContent":["import { useQuery } from ''\r\nimport type { Treatment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\r\n\r\n// for when we need a query function for useQuery\r\nasync function getTreatments(): Promise<Treatment[]> {\r\nconst { data } = await axiosInstance.get('/treatments');\r\nreturn data;\r\n}\r\n\r\nexport function useTreatments(): Treatment[] {\r\n  // TODO: get data from server via useQuery\r\n  return [];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}