{"ast":null,"code":"// async function getUser(user: User | null): Promise<User | null> {\n//   if (!user) return null;\n//   const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\n//     `/user/${user.id}`,\n//     {\n//       headers: getJWTHeader(user),\n//     },\n//   );\n//   return data.user;\n// }\nexport function useUser() {\n  // TODO: call useQuery to update user data from server\n  const user = null; // meant to be called from useAuth\n\n  function updateUser(newUser) {// TODO: update the user in the query cache\n  } // meant to be called from useAuth\n\n\n  function clearUser() {// TODO: reset user to null in query cache\n  }\n\n  return {\n    user,\n    updateUser,\n    clearUser\n  };\n}","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/user/hooks/useUser.ts"],"names":["useUser","user","updateUser","newUser","clearUser"],"mappings":"AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,OAAO,SAASA,OAAT,GAA4B;AACjC;AACA,QAAMC,IAAI,GAAG,IAAb,CAFiC,CAIjC;;AACA,WAASC,UAAT,CAAoBC,OAApB,EAAyC,CACvC;AACD,GAPgC,CASjC;;;AACA,WAASC,SAAT,GAAqB,CACnB;AACD;;AAED,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBE,IAAAA;AAApB,GAAP;AACD","sourcesContent":["import { AxiosResponse } from 'axios';\r\n\r\nimport type { User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport {\r\n  clearStoredUser,\r\n  getStoredUser,\r\n  setStoredUser,\r\n} from '../../../user-storage';\r\n\r\n// async function getUser(user: User | null): Promise<User | null> {\r\n//   if (!user) return null;\r\n//   const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\r\n//     `/user/${user.id}`,\r\n//     {\r\n//       headers: getJWTHeader(user),\r\n//     },\r\n//   );\r\n//   return data.user;\r\n// }\r\n\r\ninterface UseUser {\r\n  user: User | null;\r\n  updateUser: (user: User) => void;\r\n  clearUser: () => void;\r\n}\r\n\r\nexport function useUser(): UseUser {\r\n  // TODO: call useQuery to update user data from server\r\n  const user = null;\r\n\r\n  // meant to be called from useAuth\r\n  function updateUser(newUser: User): void {\r\n    // TODO: update the user in the query cache\r\n  }\r\n\r\n  // meant to be called from useAuth\r\n  function clearUser() {\r\n    // TODO: reset user to null in query cache\r\n  }\r\n\r\n  return { user, updateUser, clearUser };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}