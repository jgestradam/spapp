{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport function useStaff() {\n  _s();\n\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all'); // TODO: get data from server via useQuery\n\n  const staff = [];\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n\n_s(useStaff, \"W/UjwQokI5qYZ80z+yO8skpbfNg=\");","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"names":["useState","useStaff","filter","setFilter","staff"],"mappings":";;AAAA,SAAmCA,QAAnC,QAAmD,OAAnD;AAmBA,OAAO,SAASC,QAAT,GAA8B;AAAA;;AACnC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,KAAD,CAApC,CAFmC,CAInC;;AACA,QAAMI,KAAK,GAAG,EAAd;AAEA,SAAO;AAAEA,IAAAA,KAAF;AAASF,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAP;AACD;;GAReF,Q","sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\nimport type { Staff } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { filterByTreatment } from '../utils';\r\n\r\n// for when we need a query function for useQuery\r\n// async function getStaff(): Promise<Staff[]> {\r\n//   const { data } = await axiosInstance.get('/staff');\r\n//   return data;\r\n// }\r\n\r\ninterface UseStaff {\r\n  staff: Staff[];\r\n  filter: string;\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nexport function useStaff(): UseStaff {\r\n  // for filtering staff by treatment\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  // TODO: get data from server via useQuery\r\n  const staff = [];\r\n\r\n  return { staff, filter, setFilter };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}