{"ast":null,"code":"// for when we need a query function for useQuery\n// async function getUserAppointments(\n//   user: User | null,\n// ): Promise<Appointment[] | null> {\n//   if (!user) return null;\n//   const { data } = await axiosInstance.get(`/user/${user.id}/appointments`, {\n//     headers: getJWTHeader(user),\n//   });\n//   return data.appointments;\n// }\nexport function useUserAppointments() {\n  // TODO replace with React Query\n  return [];\n}","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/user/hooks/useUserAppointments.ts"],"names":["useUserAppointments"],"mappings":"AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,mBAAT,GAA8C;AACnD;AACA,SAAO,EAAP;AACD","sourcesContent":["import dayjs from 'dayjs';\r\n\r\nimport type { Appointment, User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useUser } from './useUser';\r\n\r\n// for when we need a query function for useQuery\r\n// async function getUserAppointments(\r\n//   user: User | null,\r\n// ): Promise<Appointment[] | null> {\r\n//   if (!user) return null;\r\n//   const { data } = await axiosInstance.get(`/user/${user.id}/appointments`, {\r\n//     headers: getJWTHeader(user),\r\n//   });\r\n//   return data.appointments;\r\n// }\r\n\r\nexport function useUserAppointments(): Appointment[] {\r\n  // TODO replace with React Query\r\n  return [];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}