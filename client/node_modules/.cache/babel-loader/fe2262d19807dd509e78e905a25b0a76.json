{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\n\nexport function useStaff() {\n  _s();\n\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const select; // TODO: get data from server via useQuery\n\n  const fallback = [];\n  const {\n    data: staff = fallback\n  } = useQuery(queryKeys.staff, getStaff);\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n\n_s(useStaff, \"PLOpwNYaeWyTGupZ1P6bVt+udyo=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["C:/Users/grego/OneDrive/Documents/udemy-REACT-QUERY/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"names":["useState","useQuery","axiosInstance","queryKeys","getStaff","data","get","useStaff","filter","setFilter","select","fallback","staff"],"mappings":";;AAAA,SAAmCA,QAAnC,QAAgE,OAAhE;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAGA;AACA,eAAeC,QAAf,GAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,aAAa,CAACI,GAAd,CAAkB,QAAlB,CAAvB;AACA,SAAOD,IAAP;AACD;;AAQD,OAAO,SAASE,QAAT,GAA8B;AAAA;;AACnC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMU,MAAN,CAJmC,CAMnC;;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEN,IAAAA,IAAI,EAAEO,KAAK,GAAGD;AAAhB,MAA6BV,QAAQ,CAACE,SAAS,CAACS,KAAX,EAAkBR,QAAlB,CAA3C;AACA,SAAO;AAAEQ,IAAAA,KAAF;AAASJ,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAP;AACD;;GAVeF,Q;UAQqBN,Q","sourcesContent":["import { Dispatch, SetStateAction, useState, useCallback } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport type { Staff } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { filterByTreatment } from '../utils';\r\n\r\n// for when we need a query function for useQuery\r\nasync function getStaff(): Promise<Staff[]> {\r\n  const { data } = await axiosInstance.get('/staff');\r\n  return data;\r\n}\r\n\r\ninterface UseStaff {\r\n  staff: Staff[];\r\n  filter: string;\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nexport function useStaff(): UseStaff {\r\n  // for filtering staff by treatment\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const select\r\n\r\n  // TODO: get data from server via useQuery\r\n  const fallback = [];\r\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff);\r\n  return { staff, filter, setFilter };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}